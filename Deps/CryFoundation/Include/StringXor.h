#if !defined(CRY_STRINGXOR_H)
#define CRY_STRINGXOR_H
#pragma once
#include <Foundation.h>
#include <string>
namespace Cry
{
	namespace Encrypt
	{
		static uint8_t DynamicSource[] =
		{
			0xBD, 0xDE, 0x98, 0x40, 0x45, 0xE2, 0x7D, 0x45, 0x40, 0x34, 0x8A, 0x5E, 0xA3, 0x57, 0xAF, 0xDB,
			0xC6, 0x43, 0xDF, 0x4C, 0x40, 0xDF, 0x10, 0x81, 0xDC, 0xEE, 0x5A, 0x8A, 0x63, 0xAF, 0x70, 0xB7,
			0xAE, 0x4C, 0x13, 0x98, 0x06, 0x5F, 0x45, 0xFD, 0x5F, 0xE3, 0x55, 0xF6, 0x7F, 0x7C, 0x09, 0xD3,
			0x61, 0x1D, 0x81, 0x24, 0x4D, 0x52, 0x99, 0xB9, 0xB7, 0xB0, 0xE8, 0xA2, 0x2B, 0x80, 0x97, 0x2F
		};

		static uint8_t StaticSource[] =
		{
			0x60, 0xF7, 0xB3, 0xF0, 0xC5, 0x26, 0xC7, 0xB5, 0xC6, 0x6B, 0xBE, 0x8E, 0xDA, 0xD4, 0x74, 0xCB,
			0xD8, 0xBF, 0x77, 0xFC, 0x9D, 0x83, 0xCB, 0xF1, 0xF8, 0x4B, 0xC3, 0xBA, 0xE0, 0x3F, 0x3E, 0xA7,
			0x32, 0xCA, 0xD9, 0x48, 0xA8, 0x47, 0xE2, 0x6D, 0xDD, 0x98, 0x24, 0x26, 0x1F, 0xD4, 0xD0, 0xC3,
			0x27, 0xED, 0x23, 0xD4, 0x11, 0x38, 0x72, 0x9A, 0xB3, 0xD3, 0x4B, 0xD2, 0x6C, 0xD1, 0x47, 0x1F
		};
		static char AnyArray[] = { 'P','8','X','D','b','U','C','x','b','h','E','u','Y','q','y','r','7','6','p','I','8','c','h','w','3','w','y','0','5','y','-','%' };
		static uint32_t  CrcTable[] =
		{
			0x48DFA89C, 0xEC373F11, 0xA229835A, 0x85627CC7,
			0x89838FE8, 0x4D0DF38D, 0xBF4AF9C6, 0x6B797CE3,
			0xC4E50074, 0x985D5649, 0x1CA0D772, 0xD1D3813F,
			0x31C68640, 0x90222345, 0xB50AC85E, 0x537EE5DB,
			0x1EDFED4C, 0xE3235681, 0x6C5BB88A, 0x854A46B7,
			0xDCAA4198, 0xEDEE2BFD, 0xC445D3F6, 0x2E607FD3,
			0x486BCF24, 0xA2121FB9, 0x508686A2, 0x3D24AD2F,
			0x048421F0, 0xCF9CEDB5, 0x16527C8E, 0x544E2ACB,
			0xA9F805FC, 0x4CD691F1, 0x4301A1BA, 0x0C4494A7,
			0x7F3D8748, 0xB83D486D, 0xE5FB2226, 0x44BBC6C3,
			0x8047F1D4, 0xD0C18D29, 0x99E169D2, 0x228FDD1F,
			0xC3D3D1A0, 0xA0421C25, 0x48FE24BE, 0x95E133BB,
			0x89F2F2AC, 0xF447F161, 0x78EE3EEA, 0x84706697,
			0x7FD860F8, 0xE10248DD, 0xC98DE456, 0xF43A51B3,
			0x04E46884, 0x4A829E99, 0x93248102, 0xD254110F,
			0x7CF09550, 0xB038AE95, 0xCFD0C0EE, 0x320700AB,
			0xFBDBB35C, 0xB6AE74D1, 0xBC34901A, 0x202CBC87,
			0xD655CEA8, 0x2B842D4D, 0xDB611A86, 0x66CB20A3,
			0xE3EC3334, 0x7FAC5409, 0x4A02CC32, 0xDCF048FF,
			0x7E556D00, 0xF3E7A505, 0x8CCD511E, 0x1ECE919B,
			0x89FD480C, 0xF3811C41, 0x4627954A, 0xCA189677,
			0x13D0D058, 0x5949F5BD, 0x7F17C4B6, 0x9A9D3393,
			0x504A51E4, 0x9AD5AD79, 0x6F6F4B62, 0x032384EF,
			0x07BD58B0, 0x15F5FF75, 0xF136D54E, 0x1E86E68B,
			0xBBE2B0BC, 0xFC76E7B1, 0x0B5A4E7A, 0x1512F467,
			0x12A46608, 0x9A1AA22D, 0x3F94E2E6, 0x521F8A83,
			0x5229C494, 0xF0D5AAE9, 0x879CFE92, 0x25ECC4DF,
			0xFA235860, 0xE74ABDE5, 0x2D904D7E, 0xAFBEFF7B,
			0xC656ED6C, 0x8586D721, 0xEB9FBBAA, 0x2C3AD657,
			0xA66B8FB8, 0xFBFD329D, 0xFEFB7516, 0x04012573,
			0x76F58B44, 0x70C34C59, 0x19FEE5C2, 0x368B08CF,
			0x87C26C10, 0xCF0CE055, 0x619CB9AE, 0xFD45DC6B,
			0x3B64FE1C, 0x14E7EA91, 0xE20ADCDA, 0xC2EF3C47,
			0x4C014D68, 0xDB38A70D, 0x26AE7B46, 0xCB310463,
			0x8158A5F4, 0x13F591C9, 0xE14800F2, 0x267D50BF,
			0xE41593C0, 0x3AA366C5, 0xCC5F19DE, 0xCE2A7D5B,
			0xBA57E2CC, 0x73112201, 0x34EEB20A, 0x04CF2637,
			0xD9809F18, 0x5253FF7D, 0xD750F576, 0x56DE2753,
			0x193E14A4, 0x4E037B39, 0xFB6B5022, 0xD7829CAF,
			0xF3D7CF70, 0x0DB55135, 0xFC1A6E0E, 0x75BBE24B,
			0x9FBA9B7C, 0x1AB97D71, 0xA5DE3B3A, 0x85B99427,
			0x2E4484C8, 0xAA163BED, 0x18C5E3A6, 0xDA778E43,
			0x7BD0D754, 0x7CC408A9, 0x199BD352, 0x0B99EC9F,
			0xFD041F20, 0x12299FA5, 0xFE51B63E, 0xC3890B3B,
			0xB558282C, 0xA8D7FCE1, 0xA1AC786A, 0x31CD8617,
			0xE2E7FE78, 0xC9865C5D, 0x0A3045D6, 0xFDAC3933,
			0x2B7BEE04, 0x584E3A19, 0xB04C8A82, 0x5502408F,
			0x56D582D0, 0x68275215, 0x8FC7F26E, 0xF360F82B,
			0xE23B88DC, 0x4CA3A051, 0x706C699A, 0x3D69FC07,
			0xF9460C28, 0xA5EB60CD, 0x11F31C06, 0xCC6B2823,
			0x9FEA58B4, 0x62F90F89, 0x273075B2, 0x063A987F,
			0x19C6FA80, 0xF6156885, 0x4C80229E, 0x9D52A91B,
			0xDAAFBD8C, 0x379367C1, 0x65710ECA, 0x152DF5F7,
			0x8C79ADD8, 0xB2CC493D, 0x0DB16636, 0xA6E35B13,
			0xF6071764, 0x595B88F9, 0x093A94E2, 0x2201F46F,
			0xCF938630, 0xD89AE2F5, 0xDFBD46CE, 0xA5AD1E0B,
			0xD03FC63C, 0x0D5E5331, 0x0F4D67FA, 0x4DF873E7,
			0x80DDE388, 0x51F015AD, 0x824E2466, 0x3183D203,
			0x9FFD2A14, 0xA24CA669, 0x349DE812, 0x4B57545F,
			0x233625E0, 0xD29EC165, 0x34025EFE, 0x2CFF56FB,
			0x21B6A2EC, 0x53FB62A1, 0x67D4752A, 0x94E875D7,
			0x340DAD38, 0x435DC61D, 0xCBEC5696, 0x44FB8CF3,
			0x153790C4, 0xBEE367D9, 0x0ACD6F42, 0xB579B84F,
			0x90E9D990, 0xBD4803D5, 0xA3126B2E, 0x801853EB
		};
		class Xor
		{
		public:
			static std::string Operate(std::string lpszSource);
			static uint32_t Operate(uint32_t uSource);
		};
	}
}
#endif